name: 'Full Stack CI/CD Pipeline'

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job 1: Code Quality & Linting
  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
        
    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        
    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 django
        
    - name: Install JavaScript Dependencies
      run: npm install jshint --global
      
    - name: Lint Python Code
      run: |
        echo "üêç Linting Python files..."
        find . -name "*.py" -not -path "*/migrations/*" -not -path "*/djangoenv/*" -not -path "*/node_modules/*" -exec flake8 {} +
        echo "‚úÖ Python linting completed successfully"
        
    - name: Lint JavaScript Code
      run: |
        echo "üü® Linting JavaScript files..."
        find ./server/database -name "*.js" -not -path "*/node_modules/*" -exec jshint {} +
        echo "‚úÖ JavaScript linting completed successfully"

  # Job 2: Build & Test Backend
  test-backend:
    name: Test Django Backend
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install django djangorestframework requests python-dotenv
        
    - name: Run Django Tests
      working-directory: ./server
      run: |
        echo "üß™ Running Django backend tests..."
        python manage.py check
        python manage.py makemigrations --check --dry-run
        echo "‚úÖ Django backend tests passed"

  # Job 3: Build Frontend
  build-frontend:
    name: Build React Frontend
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Set up Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: './server/frontend/package-lock.json'
        
    - name: Install Frontend Dependencies
      working-directory: ./server/frontend
      run: |
        echo "üì¶ Installing React dependencies..."
        npm ci
        
    - name: Update Browserslist Database
      working-directory: ./server/frontend
      run: |
        echo "üîÑ Updating browserslist database..."
        npx update-browserslist-db@latest
        
    - name: Build React Application
      working-directory: ./server/frontend
      run: |
        echo "‚öõÔ∏è Building React application..."
        CI=false npm run build
        echo "‚úÖ React build completed successfully"
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: react-build
        path: ./server/frontend/build/
        retention-days: 1

  # Job 4: Create Demo Documentation
  create-demo:
    name: Create Demo Documentation
    runs-on: ubuntu-latest
    needs: [test-backend, build-frontend]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Download React Build
      uses: actions/download-artifact@v4
      with:
        name: react-build
        path: ./demo/app/
        
    - name: Create Demo Website
      run: |
        echo "üåê Creating demo website..."
        mkdir -p demo/docs
        
        # Copy React app to root for direct access
        cp -r ./demo/app/* ./demo/
        
        # Create a static data file for demo purposes
        mkdir -p ./demo/static/js
        cat > ./demo/static/js/demo-data.js << 'EOF'
        // Demo data for static GitHub Pages deployment
        window.DEMO_MODE = true;
        window.DEMO_DEALERS = [
          {id: 1, full_name: "Luxury Motors Dallas", city: "Dallas", state: "Texas", address: "123 Main St", zip: "75201"},
          {id: 2, full_name: "Premium Auto Houston", city: "Houston", state: "Texas", address: "456 Oak Ave", zip: "77001"},
          {id: 3, full_name: "Elite Cars Austin", city: "Austin", state: "Texas", address: "789 Pine Rd", zip: "73301"},
          {id: 4, full_name: "Metro Motors NYC", city: "New York", state: "New York", address: "321 Broadway", zip: "10001"},
          {id: 5, full_name: "Golden Gate Auto", city: "San Francisco", state: "California", address: "654 Market St", zip: "94102"}
        ];
        window.DEMO_REVIEWS = [
          {id: 1, name: "John Doe", review: "Excellent service and great cars!", sentiment: "positive", car_make: "Toyota", car_model: "Camry", car_year: 2023},
          {id: 2, name: "Jane Smith", review: "Good experience overall", sentiment: "neutral", car_make: "Honda", car_model: "Civic", car_year: 2022},
          {id: 3, name: "Mike Johnson", review: "Outstanding dealership!", sentiment: "positive", car_make: "BMW", car_model: "X5", car_year: 2023}
        ];
        EOF
        
        # Create main demo page that includes both landing and app
        cat > demo/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>üöó Dealership Application - Full Stack Demo</title>
            <style>
                * { margin: 0; padding: 0; box-sizing: border-box; }
                body { 
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                    line-height: 1.6; color: #333; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    min-height: 100vh;
                }
                .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
                .header { text-align: center; color: white; margin-bottom: 40px; }
                .header h1 { font-size: 3rem; margin-bottom: 10px; text-shadow: 2px 2px 4px rgba(0,0,0,0.3); }
                .header p { font-size: 1.2rem; opacity: 0.9; }
                .demo-section { background: white; padding: 40px; border-radius: 15px; box-shadow: 0 10px 30px rgba(0,0,0,0.1); margin-bottom: 30px; }
                .demo-section h2 { color: #667eea; margin-bottom: 20px; font-size: 2rem; }
                .cta-button { 
                    display: inline-block; background: #28a745; color: white; padding: 15px 30px; 
                    text-decoration: none; border-radius: 25px; font-weight: bold; 
                    transition: background 0.3s; margin: 10px; text-decoration: none;
                }
                .cta-button:hover { background: #218838; }
                .app-button { background: #667eea; }
                .app-button:hover { background: #5a6fd8; }
                .github-link { background: #333; }
                .github-link:hover { background: #555; }
                .status-badge { 
                    display: inline-block; background: #28a745; color: white; 
                    padding: 5px 15px; border-radius: 15px; font-size: 0.8rem; margin: 5px;
                }
                .tech-stack { display: flex; flex-wrap: wrap; gap: 10px; margin: 20px 0; }
                .tech { background: #667eea; color: white; padding: 8px 16px; border-radius: 20px; font-size: 0.9rem; }
                .features { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-bottom: 40px; }
                .feature { background: white; padding: 30px; border-radius: 15px; box-shadow: 0 10px 30px rgba(0,0,0,0.1); transition: transform 0.3s; }
                .feature:hover { transform: translateY(-5px); }
                .feature h3 { color: #667eea; margin-bottom: 15px; font-size: 1.5rem; }
                .feature ul { list-style: none; }
                .feature li { padding: 5px 0; }
                .feature li:before { content: "‚úÖ "; color: #28a745; }
                @media (max-width: 768px) {
                    .header h1 { font-size: 2rem; }
                    .container { padding: 10px; }
                    .features { grid-template-columns: 1fr; }
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>üöó Dealership Application</h1>
                    <p>Full Stack Developer Capstone Project</p>
                    <div style="margin-top: 20px;">
                        <span class="status-badge">‚úÖ CI/CD Pipeline</span>
                        <span class="status-badge">‚úÖ Fully Tested</span>
                        <span class="status-badge">‚úÖ Production Ready</span>
                    </div>
                </div>

                <div class="demo-section">
                    <h2>üéØ Project Overview</h2>
                    <p>A comprehensive full-stack web application for car dealership management with review system, sentiment analysis, and modern UI/UX. This project demonstrates advanced software engineering practices including CI/CD, containerization, and cloud deployment.</p>
                    
                    <div class="tech-stack">
                        <span class="tech">üêç Django</span>
                        <span class="tech">‚öõÔ∏è React</span>
                        <span class="tech">üü® Node.js</span>
                        <span class="tech">üçÉ MongoDB</span>
                        <span class="tech">üê≥ Docker</span>
                        <span class="tech">‚ò∏Ô∏è Kubernetes</span>
                        <span class="tech">üöÄ GitHub Actions</span>
                        <span class="tech">ü§ñ AI Sentiment Analysis</span>
                    </div>
                </div>

                <div class="demo-section">
                    <h2>üöÄ Live Application Demo</h2>
                    <p><strong>Experience the full React application with interactive features:</strong></p>
                    <div style="text-align: center; margin-top: 20px;">
                        <a href="./app.html" class="cta-button app-button">üåê Launch React Application</a>
                        <a href="https://github.com/Braininhood/xrwvm-fullstack_developer_capstone" class="cta-button github-link">üì± View Source Code</a>
                    </div>
                    <p style="margin-top: 15px; font-size: 0.9rem; color: #666;">
                        <em>Note: This is a static demo version. The full application with backend services runs localy/your cloud (server) with Docker.</em>
                    </p>
                </div>

                <div class="features">
                    <div class="feature">
                        <h3>üè™ Dealership Management</h3>
                        <ul>
                            <li>Browse 50+ dealerships across multiple states</li>
                            <li>Filter dealerships by location</li>
                            <li>View detailed dealership information</li>
                            <li>Interactive dealer listings</li>
                        </ul>
                    </div>
                    
                    <div class="feature">
                        <h3>üìù Review System</h3>
                        <ul>
                            <li>Post authenticated reviews</li>
                            <li>Real-time sentiment analysis</li>
                            <li>View reviews with sentiment indicators</li>
                            <li>Secure review posting</li>
                        </ul>
                    </div>
                    
                    <div class="feature">
                        <h3>üöó Car Database</h3>
                        <ul>
                            <li>15+ car models from 5 manufacturers</li>
                            <li>Complete car specifications</li>
                            <li>Admin interface for management</li>
                            <li>Advanced filtering options</li>
                        </ul>
                    </div>
                    
                    <div class="feature">
                        <h3>üîß DevOps & CI/CD</h3>
                        <ul>
                            <li>Automated testing pipeline</li>
                            <li>Code quality checks</li>
                            <li>Docker containerization</li>
                            <li>Kubernetes deployment</li>
                        </ul>
                    </div>
                </div>

                <div style="text-align: center; color: white; margin-top: 40px;">
                    <p>Built with ‚ù§Ô∏è using modern web technologies</p>
                    <p>¬© 2024 Full Stack Developer Capstone Project</p>
                </div>
            </div>
        </body>
        </html>
        EOF
        
        # Create app.html that loads the React application
        cat > demo/app.html << 'DEMO_EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="utf-8" />
            <meta name="viewport" content="width=device-width,initial-scale=1" />
            <meta name="theme-color" content="#000000" />
            <meta name="description" content="Full Stack Dealership Application Demo" />
            <title>üöó Dealership Application Demo</title>
            <style>
                * { margin: 0; padding: 0; box-sizing: border-box; }
                body { 
                    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                    background: #f8f9fa; color: #333; line-height: 1.6;
                }
                .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; text-align: center; }
                .header h1 { font-size: 2.5rem; margin-bottom: 10px; }
                .nav { background: white; padding: 15px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                .nav-links { display: flex; gap: 20px; justify-content: center; }
                .nav-link { padding: 10px 20px; background: #667eea; color: white; text-decoration: none; border-radius: 5px; transition: background 0.3s; }
                .nav-link:hover { background: #5a6fd8; }
                .nav-link.active { background: #28a745; }
                .container { max-width: 1200px; margin: 0 auto; padding: 20px; }
                .dealers-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-top: 20px; }
                .dealer-card { background: white; padding: 20px; border-radius: 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); transition: transform 0.3s; }
                .dealer-card:hover { transform: translateY(-5px); }
                .dealer-name { font-size: 1.3rem; font-weight: bold; color: #667eea; margin-bottom: 10px; }
                .dealer-info { color: #666; margin-bottom: 5px; }
                .dealer-actions { margin-top: 15px; }
                .btn { padding: 8px 16px; background: #28a745; color: white; text-decoration: none; border-radius: 5px; margin-right: 10px; transition: background 0.3s; }
                .btn:hover { background: #218838; }
                .btn-secondary { background: #6c757d; }
                .btn-secondary:hover { background: #5a6268; }
                .filter-section { background: white; padding: 20px; border-radius: 10px; margin-bottom: 20px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                .filter-select { padding: 10px; border: 1px solid #ddd; border-radius: 5px; margin-right: 10px; }
                .reviews-section { background: white; padding: 20px; border-radius: 10px; margin-top: 20px; }
                .review-card { border-left: 4px solid #667eea; padding: 15px; margin-bottom: 15px; background: #f8f9fa; }
                .review-text { font-style: italic; margin-bottom: 10px; }
                .review-author { font-weight: bold; color: #667eea; }
                .sentiment { padding: 3px 8px; border-radius: 12px; font-size: 0.8rem; margin-left: 10px; }
                .sentiment.positive { background: #d4edda; color: #155724; }
                .sentiment.negative { background: #f8d7da; color: #721c24; }
                .sentiment.neutral { background: #d1ecf1; color: #0c5460; }
                .hidden { display: none; }
                .page-section { background: white; padding: 30px; border-radius: 10px; margin-bottom: 20px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
                @media (max-width: 768px) {
                    .nav-links { flex-direction: column; align-items: center; }
                    .dealers-grid { grid-template-columns: 1fr; }
                    .header h1 { font-size: 2rem; }
                }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>üöó Dealership Application</h1>
                <p>Interactive Demo - Full Stack Developer Capstone</p>
            </div>
            
            <div class="nav">
                <div class="nav-links">
                    <a href="#" class="nav-link active" onclick="showSection('dealers')">üè™ Browse Dealers</a>
                    <a href="#" class="nav-link" onclick="showSection('reviews')">üìù Reviews</a>
                    <a href="#" class="nav-link" onclick="showSection('about')">‚ÑπÔ∏è About</a>
                    <a href="../" class="nav-link">üè† Home</a>
                </div>
            </div>

            <div class="container">
                <div id="dealers-section" class="page-section">
                    <h2>üè™ Browse Dealerships</h2>
                    <div class="filter-section">
                        <label for="state-filter">Filter by State:</label>
                        <select id="state-filter" class="filter-select" onchange="filterDealers()">
                            <option value="all">All States</option>
                            <option value="Texas">Texas</option>
                            <option value="New York">New York</option>
                            <option value="California">California</option>
                        </select>
                        <span id="dealer-count">5 dealerships found</span>
                    </div>
                    <div id="dealers-grid" class="dealers-grid"></div>
                </div>

                <div id="reviews-section" class="page-section hidden">
                    <h2>üìù Customer Reviews</h2>
                    <p>Real customer feedback with AI-powered sentiment analysis</p>
                    <div id="reviews-container" class="reviews-section"></div>
                </div>

                <div id="about-section" class="page-section hidden">
                    <h2>‚ÑπÔ∏è About This Demo</h2>
                    <p><strong>This is a static demo version of the full-stack dealership application.</strong></p>
                    <br>
                    <h3>üîß Technologies Demonstrated:</h3>
                    <ul style="margin: 15px 0; padding-left: 20px;">
                        <li><strong>Frontend:</strong> React, Bootstrap, Responsive Design</li>
                        <li><strong>Backend:</strong> Django REST API, Node.js</li>
                        <li><strong>Database:</strong> MongoDB, SQLite</li>
                        <li><strong>AI/ML:</strong> NLTK Sentiment Analysis</li>
                        <li><strong>DevOps:</strong> Docker, Kubernetes, CI/CD</li>
                        <li><strong>Deployment:</strong> GitHub Actions, GitHub Pages</li>
                    </ul>
                    <h3>üöÄ Full Application Features:</h3>
                    <ul style="margin: 15px 0; padding-left: 20px;">
                        <li>User authentication and session management</li>
                        <li>50+ real dealerships across multiple states</li>
                        <li>Interactive review posting with sentiment analysis</li>
                        <li>Car database with 15+ models from 5 manufacturers</li>
                        <li>Admin panel for content management</li>
                        <li>Microservices architecture</li>
                        <li>Automated testing and deployment</li>
                    </ul>
                </div>
            </div>

            <script src="demo-app.js"></script>
        </body>
        </html>
        DEMO_EOF
        
        # Create separate JavaScript file to avoid YAML conflicts
        cat > demo/demo-app.js << 'JS_EOF'
        const dealers = [
            {id: 1, full_name: "Luxury Motors Dallas", city: "Dallas", state: "Texas", address: "123 Main St", zip: "75201"},
            {id: 2, full_name: "Premium Auto Houston", city: "Houston", state: "Texas", address: "456 Oak Ave", zip: "77001"},
            {id: 3, full_name: "Elite Cars Austin", city: "Austin", state: "Texas", address: "789 Pine Rd", zip: "73301"},
            {id: 4, full_name: "Metro Motors NYC", city: "New York", state: "New York", address: "321 Broadway", zip: "10001"},
            {id: 5, full_name: "Golden Gate Auto", city: "San Francisco", state: "California", address: "654 Market St", zip: "94102"}
        ];

        const reviews = [
            {id: 1, dealer_id: 1, name: "John Doe", review: "Excellent service and great cars!", sentiment: "positive", car_make: "Toyota", car_model: "Camry", car_year: 2023},
            {id: 2, dealer_id: 1, name: "Jane Smith", review: "Good experience overall, but could improve on wait times.", sentiment: "neutral", car_make: "Honda", car_model: "Civic", car_year: 2022},
            {id: 3, dealer_id: 2, name: "Mike Johnson", review: "Outstanding dealership! Best car buying experience ever.", sentiment: "positive", car_make: "BMW", car_model: "X5", car_year: 2023},
            {id: 4, dealer_id: 3, name: "Sarah Wilson", review: "Terrible customer service and overpriced vehicles.", sentiment: "negative", car_make: "Ford", car_model: "F-150", car_year: 2022},
            {id: 5, dealer_id: 4, name: "David Brown", review: "Professional staff and competitive prices. Highly recommended!", sentiment: "positive", car_make: "Mercedes", car_model: "C-Class", car_year: 2023}
        ];

        document.addEventListener('DOMContentLoaded', function() {
            displayDealers(dealers);
            displayReviews(reviews);
            console.log('üöó Dealership Demo Application Loaded');
        });

        function showSection(section) {
            document.querySelectorAll('.page-section').forEach(s => s.classList.add('hidden'));
            document.querySelectorAll('.nav-link').forEach(link => link.classList.remove('active'));
            document.getElementById(section + '-section').classList.remove('hidden');
            event.target.classList.add('active');
        }

        function displayDealers(dealersToShow) {
            const grid = document.getElementById('dealers-grid');
            grid.innerHTML = '';
            dealersToShow.forEach(dealer => {
                const dealerCard = document.createElement('div');
                dealerCard.className = 'dealer-card';
                dealerCard.innerHTML = `
                    <div class="dealer-name">${dealer.full_name}</div>
                    <div class="dealer-info">üìç ${dealer.city}, ${dealer.state}</div>
                    <div class="dealer-info">üè† ${dealer.address}</div>
                    <div class="dealer-info">üìÆ ${dealer.zip}</div>
                    <div class="dealer-actions">
                        <a href="#" class="btn" onclick="viewDealerReviews(${dealer.id})">üìù View Reviews</a>
                        <a href="#" class="btn btn-secondary" onclick="showDealerDetails(${dealer.id})">‚ÑπÔ∏è Details</a>
                    </div>
                `;
                grid.appendChild(dealerCard);
            });
            document.getElementById('dealer-count').textContent = `${dealersToShow.length} dealerships found`;
        }

        function filterDealers() {
            const selectedState = document.getElementById('state-filter').value;
            let filteredDealers = dealers;
            if (selectedState !== 'all') {
                filteredDealers = dealers.filter(dealer => dealer.state === selectedState);
            }
            displayDealers(filteredDealers);
        }

        function displayReviews(reviewsToShow) {
            const container = document.getElementById('reviews-container');
            container.innerHTML = '';
            reviewsToShow.forEach(review => {
                const dealer = dealers.find(d => d.id === review.dealer_id);
                const reviewCard = document.createElement('div');
                reviewCard.className = 'review-card';
                reviewCard.innerHTML = `
                    <div class="review-text">"${review.review}"</div>
                    <div class="review-author">
                        ${review.name} - ${review.car_make} ${review.car_model} ${review.car_year}
                        <span class="sentiment ${review.sentiment}">
                            ${review.sentiment === 'positive' ? 'üòä Positive' : 
                              review.sentiment === 'negative' ? 'üòû Negative' : 'üòê Neutral'}
                        </span>
                    </div>
                    <div style="margin-top: 10px; color: #666; font-size: 0.9rem;">
                        üìç ${dealer ? dealer.full_name : 'Unknown Dealer'}
                    </div>
                `;
                container.appendChild(reviewCard);
            });
        }

        function viewDealerReviews(dealerId) {
            const dealerReviews = reviews.filter(review => review.dealer_id === dealerId);
            const dealer = dealers.find(d => d.id === dealerId);
            showSection('reviews');
            document.querySelector('#reviews-section h2').textContent = `üìù Reviews for ${dealer.full_name}`;
            displayReviews(dealerReviews);
        }

        function showDealerDetails(dealerId) {
            const dealer = dealers.find(d => d.id === dealerId);
            alert(`üè™ ${dealer.full_name}\nüìç ${dealer.address}\nüèôÔ∏è ${dealer.city}, ${dealer.state} ${dealer.zip}\n\n‚ú® This is a demo version. The full application includes detailed dealer profiles, contact information, and interactive features.`);
        }
        JS_EOF
        
        echo "‚úÖ Standalone demo application created successfully"
        
    - name: Upload Demo Site
      uses: actions/upload-artifact@v4
      with:
        name: demo-site
        path: ./demo/
        retention-days: 30

  # Job 5: Deploy to GitHub Pages
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: create-demo
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Download Demo Site
      uses: actions/download-artifact@v4
      with:
        name: demo-site
        path: ./
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      with:
        enablement: true
        
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Job 6: Notification
  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()
    steps:
    - name: Deployment Status
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "üéâ Deployment successful!"
          echo "üåê Your application is live at: https://braininhood.github.io/xrwvm-fullstack_developer_capstone/"
          echo "üì± Share this link with anyone to showcase your project!"
        else
          echo "‚ùå Deployment failed. Check the logs above."
        fi 